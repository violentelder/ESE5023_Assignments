ex <- 1
et <- 2
z = rep(0, 100)
xt = yt = rep(0, 100)
for (i in 0:100) {
z[i] = i * 0.05 * lambda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
}
z[i] = i * 0.05 * lamda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z = rep(0, 100)
xt = yt = rep(0, 100)
for (i in 0:100) {
z[i] = i * 0.05 * lamda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
}
scatterplot3d(xt,yt,z,highlight.3d = TRUE)
par(mforw=c(2,2))
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z = rep(0, 100)
xt = yt = rep(0, 100)
for (i in 0:100) {
z[i] = i * 0.05 * lamda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
}
par(mforw=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE)
par(mforw=c(2,2))
par(c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE)
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z = rep(0, 100)
xt = yt = rep(0, 100)
for (i in 0:100) {
z[i] = i * 0.05 * lamda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
}
par(c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE)
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z = rep(0, 100)
xt = yt = rep(0, 100)
for (i in 0:100) {
z[i] = i * 0.05 * lamda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
}
opar = par(mforw=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE)
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z = rep(0, 100)
xt = yt = rep(0, 100)
for (i in 0:100) {
z[i] = i * 0.05 * lamda
xt[i] = ex * cos(-lamda_k*z[i])
yt[i] = ey * cos(-lamda_k*z[i])
}
opar = par(mfrow=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE)
#===========偏振光的2D偏振图以及3D波形图==
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z <- seq(0, 100, 0.01)
xt = ex * cos(-lamda_k*z)
yt = ey * cos(-lamda_k*z)
opar = par(mfrow=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
#===========偏振光的2D偏振图以及3D波形图==
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z <- seq(0, 100, 0.01)
xt = ex * cos(-lamda_k* z * 0.05*lamda)
yt = ey * cos(-lamda_k* z * 0.05*lamda)
opar = par(mfrow=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
#===========偏振光的2D偏振图以及3D波形图==
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z <- seq(0, 100, 0.01)
xt = ex * cos(-lamda_k* z * 0.05*lamda)
yt = ey * cos(-lamda_k* z * 0.05*lamda)
opar = par(mfrow=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex.*cos(-lamda_k.*z);
yt=ey.*cos(-lamda_k.*z+pi/4);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex.*cos(-lamda_k.*z);
yt=ey.*cos(-lamda_k.*z+pi/2);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex.*cos(-lamda_k.*z);
yt=ey.*cos(-lamda_k.*z+3*pi/4);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
#===========偏振光的2D偏振图以及3D波形图==
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z <- seq(0, 100, 0.01)
xt = ex * cos(-lamda_k* z * 0.05*lamda)
yt = ey * cos(-lamda_k* z * 0.05*lamda)
opar = par(mfrow=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt = ex.*cos(-lamda_k* z * 0.05*lamda);
yt = ey.*cos(-lamda_k* z * 0.05*lamda+pi/4);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex.*cos(-lamda_k* z * 0.05*lamda);
yt=ey.*cos(-lamda_k* z * 0.05*lamda+pi/2);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex.*cos(-lamda_k* z * 0.05*lamda);
yt=ey.*cos(-lamda_k* z * 0.05*lamda+3*pi/4);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
#===========偏振光的2D偏振图以及3D波形图==
lamda <- 0.5e-6;
lamda_k <- 2*pi/lamda;
ex <- 1
ey <- 2
z <- seq(0, 100, 0.01)
xt = ex * cos(-lamda_k* z * 0.05*lamda)
yt = ey * cos(-lamda_k* z * 0.05*lamda)
opar = par(mfrow=c(2,2))
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt = ex*cos(-lamda_k* z * 0.05*lamda);
yt = ey*cos(-lamda_k* z * 0.05*lamda+pi/4);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex*cos(-lamda_k* z * 0.05*lamda);
yt=ey*cos(-lamda_k* z * 0.05*lamda+pi/2);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
xt=ex*cos(-lamda_k* z * 0.05*lamda);
yt=ey*cos(-lamda_k* z * 0.05*lamda+3*pi/4);
scatterplot3d(xt,yt,z,highlight.3d = TRUE);
m1 <- matrix(sample(1:50, 50),nrow = 5,ncol = 10,byrow = T)
m2 <- matrix(sample(1:50, 50),nrow = 10,ncol = 5,byrow = T)
Matrix_multip <- function(M1, M2){
matrix_mul <- c()
count <- 0
for (i in 5) {
sum <- 0
for (j in 10) {
temp <- M1[i,j] * M2[j,i]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
M3 <- matrix(matrix_mul,nrow = 5, ncol = 5)
return(M3)
}
Matrix_multip(m1,m2)
m3 <- m1 %*% m2
m3
m4 <- m1[1,1] * m2[1,1]
m4
matrix_mul <- c()
count <- 0
for (i in 5) {
sum <- 0
for (j in 10) {
temp <- M1[i,j] * M2[j,i]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
m1 <- matrix(sample(1:50, 50),nrow = 5,ncol = 10,byrow = T)
m2 <- matrix(sample(1:50, 50),nrow = 10,ncol = 5,byrow = T)
Matrix_multip <- function(M1, M2){
matrix_mul <- c()
count <- 0
count <- 0
for (i in 5) {
sum <- 0
for (j in 10) {
temp <- M1[i,j] * M2[j,i]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
M3 <- matrix(matrix_mul,nrow = 5, ncol = 5)
return(M3)
}
matrix_mul <- c()
count <- 0
for (i in 5) {
sum <- 0
for (j in 10) {
temp <- M1[i,j] * M2[j,i]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
Matrix_multip(m1,m2)
temp <- M1[i,j] * M2[j,i]
temp <- M1[i,j] * M2[j,i]
Matrix_multip(m1,m2)
Matrix_multip(m1,m2)
Matrix_multip(m1,m2)
Matrix_multip <- function(M1, M2){
matrix_mul <- c()
count <- 0
for (i in 1:5) {
sum <- 0
for (j in 1:10) {
temp <- M1[i,j] * M2[j,i]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
M3 <- matrix(matrix_mul,nrow = 5, ncol = 5)
return(M3)
}
Matrix_multip(m1,m2)
m3 <- m1 %*% m2
m3
Matrix_multip(m1,m2)
m1 <- matrix(sample(1:50, 50),nrow = 5,ncol = 10,byrow = T)
m2 <- matrix(sample(1:50, 50),nrow = 10,ncol = 5,byrow = T)
Matrix_multip <- function(M1, M2){
matrix_mul <- c()
count <- 0
for (i in 1:5) {
sum <- 0
for (k in 1:5) {
for (j in 1:10) {
temp <- M1[i,j] * M2[j,k]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
}
M3 <- matrix(matrix_mul,nrow = 5, ncol = 5)
return(M3)
}
Matrix_multip(m1,m2)
m3 <- m1 %*% m2
m3
m1 <- matrix(sample(1:50, 50),nrow = 5,ncol = 10,byrow = T)
m2 <- matrix(sample(1:50, 50),nrow = 10,ncol = 5,byrow = T)
Matrix_multip <- function(M1, M2){
matrix_mul <- c()
count <- 0
for (i in 1:5) {
sum <- 0
for (k in 1:5) {
for (j in 1:10) {
temp <- M1[i,j] * M2[j,k]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
}
M3 <- matrix(matrix_mul,nrow = 5, ncol = 5, byrow = T)
return(M3)
}
Matrix_multip(m1,m2)
m3 <- m1 %*% m2
m3
m1 <- matrix(sample(1:50, 50),nrow = 5,ncol = 10,byrow = T)
m2 <- matrix(sample(1:50, 50),nrow = 10,ncol = 5,byrow = T)
Matrix_multip <- function(M1, M2){
matrix_mul <- c()
count <- 0
for (i in 1:5) {
for (k in 1:5) {
sum <- 0
for (j in 1:10) {
temp <- M1[i,j] * M2[j,k]
sum = sum + temp
}
count = count + 1
matrix_mul[count] <- sum
}
}
M3 <- matrix(matrix_mul,nrow = 5, ncol = 5, byrow = T)
return(M3)
}
Matrix_multip(m1,m2)
m3 <- m1 %*% m2
m3
View(Matrix_multip)
?seq
?plot
symbol <- c('+', '-', '')
num1 <<- c('1','2','3','4','5','6','7','8','9')
num2 <<- c('9','8','7','6','5','4','3','2','1')
strvectot <<- c()
#枚举出所有的表达式
assemble <- function(prevStr, leng){
if(leng <= length(num1)){
prevStr = paste(prevStr, num1[leng],sep = "")
}
for (i in 1:length(symbol)) {
#如果还没到第九个数字，则继续递归
if(leng < length(num1)){
nextstr <- paste(prevStr,symbol[i],sep = "")
assemble(nextstr, leng + 1)
}
#如果到了则添加进strvectot中
else{
strvectot <<- c(strvectot, prevStr)
break
}
}
return(strvectot)
}
assemble("", 1)
Find_expression <- function(n){
count <- 0
answer <- c()
for (i in 1:length(strvectot)) {
#eval(parse(text))可以将字符串转为命令执行，需要牢记
if(eval(parse(text = strvectot[i])) == n){
count = count + 1
answer[count] <- paste("解",count,":",strvectot[i],"=",n,sep = "")
}
}
answer[count + 1] <- paste("符合条件的等式一共有：",count, "个")
return(answer)
}
Find_expression(100)
Find_expression_count <- function(n){
count <- 0
for (i in 1:length(strvectot)) {
#eval(parse(text))可以将字符串转为命令执行，需要牢记
if(eval(parse(text = strvectot[i])) == n){
count = count + 1
}
}
return(count)
}
for (i in 1:100) {
Total_solutions <- c(Total_solutions,Find_expression_count(i))
}
plot(seq(1,100,1),Total_solutions,type = "l")
Total_solutions <- c()
for (i in 1:100) {
Total_solutions <- c(Total_solutions,Find_expression_count(i))
}
plot(seq(1,100,1),Total_solutions,type = "l")
Total_solutions.max
max(Total_solutions)
abline(h=max(Total_solutions),col="red",lty=2)
?abline
lot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
which(Total_solutions==max(Total_solutions)
which(Total_solutions==max(Total_solutions))
c <- which(Total_solutions==max(Total_solutions))
c
?text
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(x = which(Total_solutions==max(Total_solutions)),0,"max",cex=1,col="red")
which(Total_solutions==max(Total_solutions))
getwd()
setwd("D:\ESE5023\ESE5023_Assignments\Data")
setwd('D:\ESE5023\ESE5023_Assignments\Data')
setwd('./Data')
setwd('D:/ESE5023/ESE5023_Assignments/Data')
text(0.25*26,3.5,"3.1415926",cex=1,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
which(Total_solutions==max(Total_solutions))
text(0.25*26,3.5,"3.1415926",cex=1,col="red")
text(26,10,"3.1415926",cex=5,col="red")
text(26,10,"3",cex=5,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
which(Total_solutions==max(Total_solutions))
text(26,10,"3",cex=5,col="red")
text(which(Total_solutions==max(Total_solutions)),10,"3",cex=5,col="red")
text(which(Total_solutions==max(Total_solutions)),10,which(Total_solutions==max(Total_solutions)),cex=5,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
which(Total_solutions==max(Total_solutions))
text(which(Total_solutions==max(Total_solutions)),
10,which(Total_solutions==max(Total_solutions)),
cex=5,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
which(Total_solutions==max(Total_solutions))
text(which(Total_solutions==max(Total_solutions)),
10,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(which(Total_solutions==max(Total_solutions)),
10,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(which(Total_solutions==max(Total_solutions)),
5,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
plot(seq(1,100,1),Total_solutions,type = "l")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(which(Total_solutions==max(Total_solutions)),
8,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
?plot()
plot(seq(1,100,1),Total_solutions,type = "l",
xlab = Num,ylab = expression_count)
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(which(Total_solutions==max(Total_solutions)),
8,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
plot(seq(1,100,1),Total_solutions,type = "l",
xlab = "Num",ylab = "expression_count")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(which(Total_solutions==max(Total_solutions)),
8,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
plot(seq(1,100,1),Total_solutions,type = "l",
xlab = "Num",ylab = "Expression_Count")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(which(Total_solutions==max(Total_solutions)),
8,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
plot(seq(1,100,1),Total_solutions,type = "l",
xlab = "Num",ylab = "Expression_Count")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(20,max(Total_solutions),max(Total_solutions),
cex=2,col="blue")
text(which(Total_solutions==max(Total_solutions)),
8,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
text(20,max(Total_solutions),"max count is"+max(Total_solutions),
cex=2,col="blue")
plot(seq(1,100,1),Total_solutions,type = "l",
xlab = "Num",ylab = "Expression_Count")
abline(h=max(Total_solutions),col="red",lty=2)
abline(v=which(Total_solutions==max(Total_solutions)),col="red",lty=2)
text(20,max(Total_solutions),max(Total_solutions),
cex=2,col="blue")
text(which(Total_solutions==max(Total_solutions)),
8,which(Total_solutions==max(Total_solutions)),
cex=2,col="red")
Weather <- read.csv("2281305.csv",header = T)
BaoAn_T <- Weather$TMP
BaoAn_T
typeof(BaoAn_T)
head(BaoAn_T)
tail(BaoAn_T)
Obs_Time <- Weather$DATE
Obs_Time
typeof(Obs_Time)
head(Obs_Time)
tail(Obs_Time)
BaoAn_T_flag <- substr(BaoAn_T,7,7)
BaoAn_T_flag
BaoAn_T_value <- substr(BaoAn_T,2,5)
BaoAn_T_value
BaoAn_T_value2 <- as.numeric(BaoAn_T_value)
BaoAn_T_value2
BaoAn_T_flag2 <- as.numeric(BaoAn_T_flag)
BaoAn_T_flag2
BaoAn_T_flag2 <- as.logical(BaoAn_T_flag2)
BaoAn_T_flag2
BaoAn_T_value2[which(BaoAn_T_value2 == 9999)] <- NA
BaoAn_T_value3 = BaoAn_T_value2 * 0.1
BaoAn_T_value3
Obs_Time2 <- as.Date(Obs_Time)
Obs_Time2
plot(Obs_Time2,BaoAn_T_value3,type = 'l',col='BLUE',lwd = 0.5)
min(BaoAn_T_value3,na.rm=T)
max(BaoAn_T_value3,na.rm=T)
Obs_Time2[which.max(BaoAn_T_value2)]
Obs_Time2[which.min(BaoAn_T_value2)]
