library(tidyr)
library(dplyr)
library(ggplot2)
setwd('D:/ESE5023/ESE5023_Assignments/Data')
#1.1
signifdata <- read.csv("signif.csv",header = TRUE)
Sig_Eqs <- as_tibble(signifdata)
#1.2
Sig_Eqs %>%
group_by(COUNTRY) %>%
summarize(Death_sum = sum(DEATHS,na.rm = T)) %>%
arrange(desc(Death_sum))
#1.3
Sig_Eqs %>%
mutate(flag6.0 = ifelse(EQ_PRIMARY > 6.0, 1,NA)) %>%
group_by(YEAR) %>%
summarize(sum6.0 = sum(flag6.0,na.rm = T)) %>%
ggplot(aes(YEAR,sum6.0)) +
geom_line()
#1.4
CountEq_LargestEq <- function(country,tib = Sig_Eqs){
CountEq <- tib %>%
filter(COUNTRY == country) %>%
nrow()
LargestEq <- "Loss Data"
LargestEq <- tib %>%
filter(COUNTRY == country) %>%
filter(EQ_PRIMARY == max(EQ_PRIMARY,na.rm = T)) %>%
mutate(DATE = paste(YEAR,MONTH,DAY,sep = "-")) %>%
select(DATE)
LargestEq <- as.character(LargestEq)
ans <- list(CountEq,LargestEq)
return(ans)
}
CountEq_LargestEq('CHINA')[2]
Country <- Sig_Eqs %>%
pull(COUNTRY)
Country<- Country[!duplicated(Country)]
CountEq_LargestEq(Country[50])[2]
CountEq <- c()
LargestEq <- c()
for (i in 1:length(Country)) {
CountEq <- c(CountEq,as.numeric(CountEq_LargestEq(Country[i])[1]))
#在数据中会出现某个国家所有地震记录的震级不存在，导致MAX函数判断错误，使得LargestEq = 'character(0)'
#这里需要进行筛选排除
if(CountEq_LargestEq(Country[i])[2] != 'character(0)')
LargestEq <- c(LargestEq,as.character(CountEq_LargestEq(Country[i])[2]))
else
LargestEq <- c(LargestEq,"Loss Data")
}
new_eqs <- data.frame(Country,CountEq,LargestEq)
new_eqs
#========2======
#======Wind speed in Shenzhen during the past 10 years========
library(tidyr)
library(dplyr)
library(ggplot2)
setwd('D:/ESE5023/ESE5023_Assignments/Data')
shengzheng <- as_tibble(read.csv("2281305.csv",header = T))
shengzheng %>%
select(DATE,WND) %>%
mutate(winspeed = ifelse((substr(WND,14,14) == 2 | substr(WND,14,14) == 3 |
substr(WND,14,14) == 6 | substr(WND,14,14) == 7),
NA,as.numeric(substr(WND,9,12)) * 10)) %>%
filter(winspeed != 9999) %>%
mutate(date2 = as.numeric(paste(substr(DATE,1,4),substr(DATE,6,7),sep = ""))) %>%
group_by(date2) %>%
summarize(month_mean = mean(winspeed,na.rm = T)) %>%
mutate(year = substr(date2,1,4)) %>%
mutate(month = as.numeric(substr(date2,5,6))) %>%
ggplot(aes(month,month_mean,color = year)) +
geom_line() +
labs(title = "Monthly average wind speed from 2010 to 2020")+
ylab("Monthly average wind speed(m/s)")+
xlab("Month")
#========2======
#======Wind speed in Shenzhen during the past 10 years========
library(tidyr)
library(dplyr)
library(ggplot2)
setwd('D:/ESE5023/ESE5023_Assignments/Data')
shengzheng <- as_tibble(read.csv("2281305.csv",header = T))
shengzheng %>%
select(DATE,WND) %>%
mutate(winspeed = ifelse((substr(WND,14,14) == 2 | substr(WND,14,14) == 3 |
substr(WND,14,14) == 6 | substr(WND,14,14) == 7),
NA,as.numeric(substr(WND,9,12)) * 10)) %>%
filter(winspeed != 9999) %>%
mutate(date2 = as.numeric(paste(substr(DATE,1,4),substr(DATE,6,7),sep = ""))) %>%
group_by(date2) %>%
summarize(month_mean = mean(winspeed,na.rm = T)) %>%
mutate(year = substr(date2,1,4)) %>%
mutate(month = as.numeric(substr(date2,5,6))) %>%
ggplot(aes(month,month_mean,color = year)) +
geom_line() +
labs(title = "Monthly average wind speed from 2010 to 2020")+
ylab("Monthly average wind speed(m/s)")+
xlab("Month")
#========3======
#======Revisit a data set========
library(tidyr)
library(dplyr)
library(ggplot2)
setwd('D:/ESE5023/ESE5023_Assignments/Data')
Rice_export <- as_tibble(read.csv("Rice_China_export_Value.csv",header = T))
Rice_export %>%
filter(Partner.Country.Code == 96) %>%
ggplot(aes(Year,Value*1000))+
geom_line()+
labs(title = "Rice export to Hongkong in 1987---2016")+
xlab("Year")+
ylab('value($)')
